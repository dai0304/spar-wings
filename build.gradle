// -*- coding: utf-8; mode: groovy -*-

buildscript {
	repositories {
		jcenter()
		mavenCentral()
		maven { url "http://repo.spring.io/plugins-release" }
	}
	dependencies {
		classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3"
		classpath "com.diffplug.spotless:spotless-plugin-gradle:3.8.0"
		classpath "de.thetaphi:forbiddenapis:2.2"
		classpath "de.aaschmid:gradle-cpd-plugin:1.0"
	}
}

plugins {
	id "com.jfrog.bintray" version "1.7.3"
}

// custom configuration
apply from: 'gradle/version.gradle'
apply from: 'gradle/resolveDependencies.gradle'

ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

defaultTasks "clean", "build"


allprojects {
	repositories {
		mavenCentral()
		jcenter()
	}
	group = "jp.xet.${githubProjectName}"
	version = rootProject.version
}
description "Support library for Spring framework, AWS Java SDK and the others."

subprojects {
	apply plugin: "java"
	apply plugin: "maven"
	apply plugin: "maven-publish"
	apply plugin: "com.jfrog.bintray"
	
	sourceCompatibility = targetCompatibility = 1.8
	
	// ======== code quality ========
	apply plugin: "checkstyle"
	apply plugin: "findbugs"
	apply plugin: "pmd"
	apply plugin: "cpd"
	apply plugin: "jacoco"
	apply plugin: "de.thetaphi.forbiddenapis"
	apply plugin: "com.diffplug.gradle.spotless"
	
	// code quality configuration
	apply from: "${rootProject.projectDir}/gradle/quality/checkstyle.gradle"
	apply from: "${rootProject.projectDir}/gradle/quality/findbugs.gradle"
	apply from: "${rootProject.projectDir}/gradle/quality/pmd.gradle"
	apply from: "${rootProject.projectDir}/gradle/quality/cpd.gradle"
	apply from: "${rootProject.projectDir}/gradle/quality/jacoco.gradle"
	apply from: "${rootProject.projectDir}/gradle/quality/forbiddenapis.gradle"
	apply from: "${rootProject.projectDir}/gradle/quality/spotless.gradle"
	
	apply from: "${rootProject.projectDir}/gradle/sourceArtifact.gradle"
	apply from: "${rootProject.projectDir}/gradle/bintray.gradle"
	
	// compiler
	tasks.withType(AbstractCompile) each {
		it.options.encoding = "UTF-8"
	}
	compileJava {
		options.compilerArgs << "-Xlint"
	}
	
	configurations {
		deployerJars
		testCompile.extendsFrom compileOnly
	}

	repositories {
		jcenter()
		mavenCentral()
		maven { url "http://maven.xet.jp/release" } // for baseunits
	}
	
	dependencies {
		compile "org.slf4j:slf4j-api:$slf4jVersion"
		compileOnly "org.projectlombok:lombok:$lombokVersion"
		testCompile "org.slf4j:jul-to-slf4j:$slf4jVersion"
		testCompile "ch.qos.logback:logback-classic:$logbackVersion"
		testCompile "junit:junit:$junitVersion"
		testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"
		testCompile "org.mockito:mockito-core:$mockitoCoreVersion"
	}
	
	
	// ======== Publishing =======
	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
				artifact sourcesJar {
					classifier "sources"
				}
				artifact javadocJar {
					classifier "javadoc"
				}
				pom.withXml {
					asNode().children().last() + {
						resolveStrategy = Closure.DELEGATE_FIRST
						name project.name
						description project.description
						inceptionYear "2015"
						licenses {
							license {
								name "The Apache Software License, Version 2.0"
								url "http://www.apache.org/license/LICENSE-2.0.txt"
								distribution "repo"
							}
						}
						developers {
							developer {
								id "dai0304"
								name "MIYAMOTO Daisuke"
								email "dai.0304@gmail.com"
							}
						}
					}
				}
			}
		}
	}
}

// ======== wrapper ========
task wrapper(type: Wrapper) {
	gradleVersion = "4.6"
}
